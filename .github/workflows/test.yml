name: ML Pipeline CI

on:
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0          # ← main との差分用に履歴を全部取る
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Add repo to PYTHONPATH
      run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

        # requirements.txt が存在する場合のみ読み込む
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

        # CI に必要なパッケージを個別インストール
        pip install pytest great_expectations pandas scikit-learn \
                    flake8 black mypy pytest-cov
    
    
    - name: Lint with flake8
      run: flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Format check with black
      run: black --check day5/演習3 --exclude 'tests/test_model_regression.py'
    - name: Run data tests
      run: pytest day5/演習3/tests/test_data.py -v
    - name: Run model tests
      run: pytest day5/演習3/tests/test_model.py -v
    
    
    - name: Extract baseline model from main
      id: baseline
      run: |
        # どちらのデフォルトブランチ名でも動くよう main / master を両方フェッチ
        git fetch origin --depth=1

        baseline_found=false
        for branch in main master; do
          if git cat-file -e "origin/${branch}:models/titanic_model.pkl" 2>/dev/null; then
            git show "origin/${branch}:models/titanic_model.pkl" > /tmp/baseline_model.pkl
            baseline_found=true
            break
          fi
        done

        echo "baseline=${baseline_found}" >> $GITHUB_OUTPUT
    
    - name: Run regression tests (accuracy / latency)
      if: always()        
      env:
        BASELINE_MODEL: /tmp/baseline_model.pkl
        HAS_BASELINE: ${{ steps.baseline.outputs.baseline }}
      run: |
        pytest day5/演習3/tests/test_model_regression.py -v